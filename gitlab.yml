name: gitlab-cli
version: "0.0.1"
author: Vinicius <senna.vmd@gmail.com>
about: Cli to interface with Gitlab's REST API
base_endpoint: https://gitlab.com/api/v4
vars:
    done_label: "workflow:Done"
headers:
    Private-Token: "{{env.GITLAB_TOKEN}}"
args:
    - config:
        short: c
        long: config
        value_name: FILE
        help: Sets a custom config file
        takes_value: true
    - verbose:
        short: v
        multiple: true
        help: Sets the level of verbosity
subcommands:
    - show:
        about: show issue data
        path: /projects/{{env.GITLAB_PROJECT_ID}}/issues/{{args.ISSUE_ID}}
        args:
            - ISSUE_ID:
                help: Id of the issue to show
                required: true
                index: 1
        response_template: issue.j2

    - project:
        about: show project data
        path: /projects/{{env.GITLAB_PROJECT_ID}}

    - project_users:
        about: show project users
        path: /projects/{{env.GITLAB_PROJECT_ID}}/users

    - issues:
        about: list issues
        path: /projects/{{env.GITLAB_PROJECT_ID}}/issues
        query_params:
            labels: "{% if args.labels is defined%}{{args.labels}}{% endif %}"
        args:
            - labels:
                short: l
                long: labels
                help: filter by labels
                takes_value: true
        response_template: list.j2

    - newissue:
        about: create an issue
        path: /projects/{{env.GITLAB_PROJECT_ID}}/issues
        method: POST
        args:
            - TITLE:
                help: Issue title
                required: true
                index: 1
            - DESCRIPTION:
                short: d
                long: description
                help: Issue description
                takes_value: true
            - LABELS:
                short: l
                long: labels
                help: labels, comma separated values
                takes_value: true
        body:
            title: "{{ args.TITLE }}"
            description: "{%- if args.DESCRIPTION -%}{{args.DESCRIPTION}}{%- endif -%}"
            labels: "{%- if args.LABELS -%}{{args.LABELS}}{%- endif -%}"
        response_template: issue.j2

    - edit:
        about: edit an issue
        path: /projects/{{env.GITLAB_PROJECT_ID}}/issues/{{args.ISSUE_ID}}
        method: PUT
        args:
            - ISSUE_ID:
                help: Id of the issue to edit
                required: true
                index: 1
            - labels:
                short: l
                long: labels
                help: labels, comma separated values
                takes_value: true
            - description:
                short: d
                long: description
                help: Issue description
                takes_value: true
            - title:
                short: T
                long: title
                help: Issue title
                takes_value: true
            - assignee:
                short: a
                long: assignee
                help: List of user ids to assign the issue to, 0 unassigns everyone
                takes_value: true
        body:
            assignee_ids: "{{ args.assignee }}"
            description: "{{ args.description }}"
            title: "{{ args.title }}"
            labels: "{{ args.labels }}"
            state_event: "{%- if args.labels is containing(vars.done_label) -%}close{%- else -%}reopen{%- endif -%}"
        response_template: issue.j2

    - boards:
        about: list boards
        path: /projects/{{env.GITLAB_PROJECT_ID}}/boards

# Scripts
    - new:
        about: create an issue in the ready for dev column
        args:
            - TITLE:
                help: Issue title
                required: true
                index: 1
            - DESCRIPTION:
                short: d
                long: description
                help: Issue description
                takes_value: true
        script: |
            LABELS="workflow:Ready for development"
            {% if args.description is defined%}
                gitlab newissue -l "$LABELS" -d "{{args.description}}" "{{args.TITLE}}"
            {% else %}
                gitlab newissue -l "$LABELS" "{{args.TITLE}}"
            {% endif %}
        response_template: issue.j2
    - cleanlabels:
        about: Return the issue's list of labels without workflow labels
        args:
            - ISSUE_ID:
                help: Id of the issue
                required: true
                index: 1
        script: |
            LABELS=$(gitlab show {{ args.ISSUE_ID }} | grep Labels: | sed 's/Labels:[ ]\{0,\}//')
            NO_WORKFLOW_LABELS=$(echo $LABELS | sed 's/[ ]\{0,\}workflow:[A-Z a-z]\{1,\}[,]\{0,1\}//g' | sed 's/^[ ]\{1,\}//' | sed 's/[ ]\{0,\}[,]\{0,\}[ ]\{0,\}$//')
            echo $NO_WORKFLOW_LABELS

    - code:
        about: Move issue to code in progress column
        args:
            - ISSUE_ID:
                help: Id of the issue to code
                required: true
                index: 1
        script: |
            LABELS=$(gitlab cleanlabels {{ args.ISSUE_ID }})
            if [ -z "$LABELS" ]; then
                gitlab edit -q -a {{env.GITLAB_USER_ID}} -l "workflow:In progress" {{ args.ISSUE_ID }}
            else
                gitlab edit -q -a {{env.GITLAB_USER_ID}} -l "$LABELS,workflow:In progress" {{ args.ISSUE_ID }}
            fi
            gitlab show {{ args.ISSUE_ID }}

    - done:
        about: Move ticket to done column
        args:
            - ISSUE_ID:
                help: Id of the issue to move
                required: true
                index: 1
        script: |
            LABELS=$(gitlab cleanlabels {{ args.ISSUE_ID }})
            if [ -z "$LABELS" ]; then
                gitlab edit -q -a 0 -l "{{ vars.done_label }}" {{ args.ISSUE_ID }}
            else
                gitlab edit -q -a 0 -l "$LABELS,{{ vars.done_label }}" {{ args.ISSUE_ID }}
            fi
            gitlab board

    - board:
        about: Print board
        script: |
            export READY=$(gitlab issues -l "workflow:Ready for development" -t list_for_board.j2)
            export PROGRESS=$(gitlab issues -l "workflow:In progress" -t list_for_board.j2)
            export WIDTH=$(tput cols)
            python /Users/vinicius/.gitlab.joat/templates/print_board.py
